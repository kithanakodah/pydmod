from typing import Any, Tuple

def get_io() -> _IO: ...
def new_frame() -> Any: ...
def render() -> Any: ...
def get_version() -> Any: ...
def style_colors_classic( dst: Any = None) -> Any: ...
def show_style_editor( style: Any = None) -> Any: ...
def show_test_window() -> Any: ...
def show_style_selector( label: str) -> Any: ...
def begin( label: str,closable: Any = False, flags: Any = 0) -> Any: ...
def end() -> Any: ...
def end_child() -> Any: ...
def get_content_region_available() -> Any: ...
def get_window_content_region_min() -> Any: ...
def get_window_content_region_width() -> Any: ...
def set_window_focus_labeled( label: str) -> Any: ...
def set_window_size_named( label: str, width: float, height: float, condition: int = ONCE) -> Any: ...
def get_scroll_y() -> Any: ...
def get_scroll_max_y() -> Any: ...
def set_scroll_y( scroll_y: float) -> Any: ...
def set_next_window_collapsed( collapsed: bool, condition: int = ALWAYS) -> Any: ...
def set_next_window_focus() -> Any: ...
def get_window_draw_list() -> Any: ...
def get_overlay_draw_list() -> Any: ...
def get_window_size() -> Any: ...
def get_window_height() -> Any: ...
def set_next_window_size( width: float, height: float, condition: int = ALWAYS) -> Any: ...
def set_next_window_content_size( width: float, height: float) -> Any: ...
def set_window_position_labeled( label: str, x: float, y: float, condition: int = ALWAYS) -> Any: ...
def set_window_collapsed_labeled( label: str, collapsed: bool, condition: int = ALWAYS) -> Any: ...
def is_window_appearing() -> Any: ...
def tree_pop() -> Any: ...
def selectable( label: str,selected: Any = False, flags: int = 0,width: int = 0,height: int = 0) -> Any: ...
def listbox( label: str, current: int, items: Any, height_in_items: int = -1) -> Any: ...
def listbox_header( label: str,width: int = 0,height: int = 0) -> Any: ...
def listbox_footer() -> Any: ...
def begin_tooltip() -> Any: ...
def end_tooltip() -> Any: ...
def end_main_menu_bar() -> Any: ...
def end_menu_bar() -> Any: ...
def end_menu() -> Any: ...
def open_popup( label: str) -> Any: ...
def begin_popup( label: str, flags: Any = 0) -> Any: ...
def begin_popup_modal( title: str,visible: Any = None, flags: Any = 0) -> Any: ...
def begin_popup_context_item( label: str = None, mouse_button: int = 1) -> Any: ...
def begin_popup_context_window( label: str = None, also_over_items: bool = True, mouse_button: int = 1) -> Any: ...
def end_popup() -> Any: ...
def text( text: str) -> Any: ...
def text_disabled( text: str) -> Any: ...
def label_text( label: str, text: str) -> Any: ...
def bullet() -> Any: ...
def bullet_text( text: str) -> Any: ...
def small_button( label: str) -> Any: ...
def invisible_button( identifier: str,width,height) -> Any: ...
def image_button(texture_id, width: float, height: float, uv0: Any = (0,0), uv1: Any = (1,1), tint_color: Any = (1,1,1,1), border_color: Any = (0,0,0,0), frame_padding: int = -1,) -> Any: ...
def image(texture_id, width: float, height: float, uv0: Any = (0,0), uv1: Any = (1,1), tint_color: Any = (1,1,1,1), border_color: Any = (0,0,0,0),) -> Any: ...
def checkbox( label: str, state: bool) -> Any: ...
def radio_button( label: str, active: bool) -> Any: ...
def combo( label: str, current: int, items: Any, height_in_items: int = -1) -> Any: ...
def color_edit4( label: str, r: float, g: float, b: float, a: float, show_alpha: bool = True,flags: int = 0) -> Any: ...
def drag_float( label: str, value: float, change_speed: float = 1.0, min_value: float = 0.0, max_value: float = 0.0, format: str = "%.3f", power: float = 1.) -> Any: ...
def drag_float2( label: str, value0: float, value1: float, change_speed: float = 1.0, min_value: float = 0.0, max_value: float = 0.0, format: str = "%.3f", power: float = 1.) -> Any: ...
def drag_float3( label: str, value0: float, value1: float, value2: float, change_speed: float = 1.0, min_value: float = 0.0, max_value: float = 0.0, format: str = "%.3f", power: float = 1.) -> Any: ...
def drag_float4( label: str, value0: float, value1: float, value2: float, value3: float, change_speed: float = 1.0, min_value: float = 0.0, max_value: float = 0.0, format: str = "%.3f", power: float = 1.) -> Any: ...
def drag_int( label: str, value: int, change_speed: float = 1.0, min_value: int = 0, max_value: int = 0, format: str = "%d") -> Any: ...
def drag_int2( label: str, value0: int, value1: int, change_speed: float = 1.0, min_value: int = 0, max_value: int = 0, format: str = "%d") -> Any: ...
def drag_int3( label: str, value0: int, value1: int, value2: int, change_speed: float = 1.0, min_value: int = 0, max_value: int = 0, format: str = "%d") -> Any: ...
def drag_int4( label: str, value0: int, value1: int, value2: int, value3: int, change_speed: float = 1.0, min_value: int = 0, max_value: int = 0, format: str = "%d") -> Any: ...
def input_text( label: str, value: str, buffer_length: int, flags: Any = 0) -> Any: ...
def input_text_multiline( label: str, value: str, buffer_length: int, width: float = 0, height: float = 0, flags: Any = 0) -> Any: ...
def input_float( label: str, value: float, step: float = 0.0, step_fast: float = 0.0, format: str = "%.3f", flags: Any = 0) -> Any: ...
def input_float2( label: str, value0: float, value1: float, format: str = "%.3f", flags: Any = 0) -> Any: ...
def input_float3( label: str, value0: float, value1: float, value2: float, format: str = "%.3f", flags: Any = 0) -> Any: ...
def input_float4( label: str, value0: float, value1: float, value2: float, value3: float, format: str = "%.3f", flags: Any = 0) -> Any: ...
def input_int( label: str, value: int, step: int = 1, step_fast: int = 100, flags: Any = 0) -> Any: ...
def input_int2( label: str, value0: int, value1: int, flags: Any = 0) -> Any: ...
def input_int3( label: str, value0: int, value1: int, value2: int, flags: Any = 0) -> Any: ...
def input_int4( label: str, value0: int, value1: int, value2: int, value3: int, flags: Any = 0) -> Any: ...
def input_double( label: str, value: float, step: float = 0.0, step_fast: float = 0.0, format: str = "%.6f", flags: Any = 0) -> Any: ...
def slider_angle( label: str, value: float, min_value: float, max_value: float,) -> Any: ...
def slider_float( label: str, value: float, min_value: float, max_value: float, format: str = "%.3f", power: float = 1.0) -> Any: ...
def slider_float2( label: str, value0: float, value1: float, min_value: float, max_value: float, format: str = "%.3f", power: float = 1.0) -> Any: ...
def slider_float3( label: str, value0: float, value1: float, value2: float, min_value: float, max_value: float, format: str = "%.3f", power: float = 1.0) -> Any: ...
def slider_float4( label: str, value0: float, value1: float, value2: float, value3: float, min_value: float, max_value: float, format: str = "%.3f", power: float = 1.0) -> Any: ...
def slider_int( label: str, value: int, min_value: int, max_value: int, format: str = "%.f") -> Any: ...
def slider_int2( label: str, value0: int, value1: int, min_value: int, max_value: int, format: str = "%.f") -> Any: ...
def slider_int3( label: str, value0: int, value1: int, value2: int, min_value: int, max_value: int, format: str = "%.f") -> Any: ...
def slider_int4( label: str, value0: int, value1: int, value2: int, value3: int, min_value: int, max_value: int, format: str = "%.f") -> Any: ...
def v_slider_float( label: str, width: float, height: float, value: float, min_value: float, max_value: float, format: str = "%.f", power: float = 1.0) -> Any: ...
def v_slider_int( label: str, width: float, height: float, value: int, min_value: int, max_value: int, format: str = "%d") -> Any: ...
def progress_bar( fraction: float,size: Any = (0,0), overlay: str = "") -> Any: ...
def set_keyboard_focus_here( offset: int = 0) -> Any: ...
def is_item_focused() -> Any: ...
def is_item_clicked( mouse_button: int = 0) -> Any: ...
def is_any_item_hovered() -> Any: ...
def is_any_item_focused() -> Any: ...
def get_item_rect_max() -> Any: ...
def set_item_allow_overlap() -> Any: ...
def is_window_focused( flags: Any = 0) -> Any: ...
def is_rect_visible( size_width: float, size_height: float) -> Any: ...
def get_time() -> Any: ...
def is_key_pressed( key_index: int, repeat: bool = False) -> Any: ...
def is_mouse_hovering_rect( r_min_x: float, r_min_y: float, r_max_x: float, r_max_y: float, clip: bool = True) -> Any: ...
def is_mouse_double_clicked( button: int = 0) -> Any: ...
def is_mouse_released( button: int = 0) -> Any: ...
def is_mouse_dragging( button: int = 0, lock_threshold: float = -1.0) -> Any: ...
def get_mouse_pos() -> Any: ...
def get_mouse_cursor() -> Any: ...
def set_scroll_here( center_y_ratio: float = 0.5) -> Any: ...
def push_font( font: Any) -> Any: ...
def separator() -> Any: ...
def new_line() -> Any: ...
def dummy(width,height) -> Any: ...
def unindent( width: float = 0.0) -> Any: ...
def next_column() -> Any: ...
def get_column_offset( column_index: int = -1) -> Any: ...
def get_column_width( column_index: int = -1) -> Any: ...
def get_columns_count() -> Any: ...
def set_drag_drop_payload( type: str, data: Any, condition: int = 0) -> Any: ...
def begin_drag_drop_target() -> Any: ...
def end_drag_drop_target() -> Any: ...
def end_group() -> Any: ...
def get_cursor_pos_x() -> Any: ...
def set_cursor_pos_y( y: float) -> Any: ...
def get_cursor_screen_pos() -> Any: ...
def align_text_to_frame_padding() -> Any: ...
def get_text_line_height_with_spacing() -> Any: ...
def get_frame_height_with_spacing() -> Any: ...
def destroy_context( ctx: Any = None) -> Any: ...
def set_current_context( ctx: Any) -> Any: ...
def pop_id() -> Any: ...
def _ansifeed_text_ansi_colored( text: str, r: float, g: float, b: float, a: float = 1.) -> Any: ...
def _py_styled( variable: Any,value) -> Any: ...
def _py_scoped( str_id: str) -> Any: ...
def _py_vertex_buffer_vertex_uv_offset() -> Any: ...
def _py_vertex_buffer_vertex_size() -> Any: ...
def get_style() -> Any: ...
def end_frame() -> Any: ...
def show_user_guide() -> Any: ...
def style_colors_dark( dst: Any = None) -> Any: ...
def style_colors_light( dst: Any = None) -> Any: ...
def show_font_selector( label: str) -> Any: ...
def get_draw_data() -> Any: ...
def get_content_region_max() -> Any: ...
def get_content_region_available_width() -> Any: ...
def get_window_content_region_max() -> Any: ...
def set_window_focus() -> Any: ...
def get_scroll_x() -> Any: ...
def get_scroll_max_x() -> Any: ...
def set_scroll_x( scroll_x: float) -> Any: ...
def set_window_font_scale( scale: float) -> Any: ...
def set_next_window_bg_alpha( alpha: float) -> Any: ...
def get_window_position() -> Any: ...
def get_window_width() -> Any: ...
def set_window_position( x: float, y: float, condition: int = ALWAYS) -> Any: ...
def set_window_collapsed( collapsed: bool, condition: int = ALWAYS) -> Any: ...
def is_window_collapsed() -> Any: ...
def tree_node( text: str, flags: int = 0) -> Any: ...
def set_tooltip( text: str) -> Any: ...
def begin_main_menu_bar() -> Any: ...
def begin_menu_bar() -> Any: ...
def begin_menu( label: str,enabled: Any = True) -> Any: ...
def close_current_popup() -> Any: ...
def text_colored( text: str, r: float, g: float, b: float, a: float = 1.) -> Any: ...
def text_wrapped( text: str) -> Any: ...
def text_unformatted( text: str) -> Any: ...
def button( label: str,width: int = 0,height: int = 0) -> Any: ...
def arrow_button( label: str, direction: Any = DIRECTION_NONE) -> Any: ...
def checkbox_flags( label: str, flags: int, flags_value: int) -> Any: ...
def color_edit3( label: str, r: float, g: float, b: float,flags: int = 0) -> Any: ...
def set_item_default_focus() -> Any: ...
def is_item_active() -> Any: ...
def is_item_visible() -> Any: ...
def is_any_item_active() -> Any: ...
def get_item_rect_min() -> Any: ...
def get_item_rect_size() -> Any: ...
def get_style_color_name( index: int) -> Any: ...
def get_key_index( key: int) -> Any: ...
def is_key_down( key_index: int) -> Any: ...
def is_mouse_clicked( button: int = 0, repeat: bool = False) -> Any: ...
def is_mouse_down( button: int = 0) -> Any: ...
def get_mouse_drag_delta( button: int = 0, lock_threshold: float = -1.0) -> Any: ...
def reset_mouse_drag_delta( button: int = 0) -> Any: ...
def set_mouse_cursor( mouse_cursor_type: Any) -> Any: ...
def set_scroll_from_pos_y( pos_y: float, center_y_ratio: float = 0.5) -> Any: ...
def pop_font() -> Any: ...
def calc_text_size( text: str, hide_text_after_double_hash: bool = False, wrap_width: float = -1.0) -> Any: ...
def push_style_var( variable: Any,value) -> Any: ...
def pop_style_var( count: int = 1) -> Any: ...
def get_font_size() -> Any: ...
def get_style_color_vec_4( idx: Any) -> Any: ...
def get_font_tex_uv_white_pixel() -> Any: ...
def get_color_u32_idx( idx: Any, alpha_mul: float = 1.0) -> Any: ...
def get_color_u32_rgba( r: float, g: float, b: float, a: float) -> Any: ...
def get_color_u32( col: int) -> Any: ...
def push_item_width( item_width: float) -> Any: ...
def pop_item_width() -> Any: ...
def calculate_item_width() -> Any: ...
def push_text_wrap_pos( wrap_pos_x: float = 0.0) -> Any: ...
def pop_text_wrap_pos() -> Any: ...
def push_allow_keyboard_focus( allow_focus: bool) -> Any: ...
def pop_allow_keyboard_focus() -> Any: ...
def push_button_repeat( repeat: bool) -> Any: ...
def pop_button_repeat() -> Any: ...
def pop_style_color( count: int = 1) -> Any: ...
def same_line( position: float = 0.0, spacing: float = -1.0) -> Any: ...
def spacing() -> Any: ...
def indent( width: float = 0.0) -> Any: ...
def columns( count: int = 1, identifier: str = None, border: bool = True) -> Any: ...
def get_column_index() -> Any: ...
def set_column_offset( column_index: int, offset_x: float) -> Any: ...
def set_column_width( column_index: int, width: float) -> Any: ...
def begin_drag_drop_source( flags: Any = 0) -> Any: ...
def end_drag_drop_source() -> Any: ...
def accept_drag_drop_payload( type: str, flags: Any = 0) -> Any: ...
def begin_group() -> Any: ...
def get_cursor_pos() -> Any: ...
def get_cursor_pos_y() -> Any: ...
def set_cursor_pos_x( x: float) -> Any: ...
def get_cursor_start_pos() -> Any: ...
def get_text_line_height() -> Any: ...
def get_frame_height() -> Any: ...
def create_context( shared_font_atlas: Any = None) -> Any: ...
def get_current_context() -> Any: ...
def push_id( str_id: str) -> Any: ...
def _ansifeed_text_ansi( text: str) -> Any: ...
def _py_font( font: Any) -> Any: ...
def _py_vertex_buffer_vertex_pos_offset() -> Any: ...
def _py_vertex_buffer_vertex_col_offset() -> Any: ...
def _py_index_buffer_index_size() -> Any: ...


class GuiStyle(object):
	def alpha(self) -> Any: ...
	def window_padding(self) -> Any: ...
	def window_min_size(self) -> Any: ...
	def window_rounding(self) -> Any: ...
	def window_border_size(self) -> Any: ...
	def child_rounding(self) -> Any: ...
	def child_border_size(self) -> Any: ...
	def popup_rounding(self) -> Any: ...
	def popup_border_size(self) -> Any: ...
	def window_title_align(self) -> Any: ...
	def frame_padding(self) -> Any: ...
	def frame_rounding(self) -> Any: ...
	def frame_border_size(self) -> Any: ...
	def item_spacing(self) -> Any: ...
	def item_inner_spacing(self) -> Any: ...
	def touch_extra_padding(self) -> Any: ...
	def indent_spacing(self) -> Any: ...
	def columns_min_spacing(self) -> Any: ...
	def scrollbar_size(self) -> Any: ...
	def scrollbar_rounding(self) -> Any: ...
	def grab_min_size(self) -> Any: ...
	def grab_rounding(self) -> Any: ...
	def button_text_align(self) -> Any: ...
	def display_window_padding(self) -> Any: ...
	def display_safe_area_padding(self) -> Any: ...
	def mouse_cursor_scale(self) -> Any: ...
	def anti_aliased_lines(self) -> Any: ...
	def anti_aliased_fill(self) -> Any: ...
	def curve_tessellation_tolerance(self) -> Any: ...
	def color(self, variable: Any) -> Any: ...
	def colors(self) -> Any: ...
	def create() -> Any: ...

class _Colors(object):
	pass

class _DrawCmd(object):
	def texture_id(self) -> Any: ...
	def elem_count(self) -> Any: ...
	def from_ptr( ptr: Any) -> Any: ...
	def clip_rect(self) -> Any: ...

class _DrawData(object):
	def deindex_all_buffers(self) -> Any: ...
	def valid(self) -> Any: ...
	def total_vtx_count(self) -> Any: ...
	def commands_lists(self) -> Any: ...
	def from_ptr( ptr: Any) -> Any: ...
	def scale_clip_rects(self,width,height) -> Any: ...
	def cmd_count(self) -> Any: ...
	def total_idx_count(self) -> Any: ...

class _DrawList(object):
	def cmd_buffer_size(self) -> Any: ...
	def vtx_buffer_size(self) -> Any: ...
	def idx_buffer_size(self) -> Any: ...
	def add_line(self, start_x: float, start_y: float, end_x: float, end_y: float, col: int, thickness: float = 1.0,) -> Any: ...
	def add_rect(self, upper_left_x: float, upper_left_y: float, lower_right_x: float, lower_right_y: float, col: int, rounding: float = 0.0, rounding_corners_flags: Any = 0xF, thickness: float = 1.0,) -> Any: ...
	def add_rect_filled(self, upper_left_x: float, upper_left_y: float, lower_right_x: float, lower_right_y: float, col: int, rounding: float = 0.0, rounding_corners_flags: Any = 0xF,) -> Any: ...
	def add_circle(self, centre_x: float, centre_y: float, radius: float, col: int, num_segments: int = 12, thickness: float = 1.0) -> Any: ...
	def add_circle_filled(self, centre_x: float, centre_y: float, radius: float, col: int, num_segments: int = 12) -> Any: ...
	def add_text(self, pos_x: float, pos_y: float, col: int, text: str) -> Any: ...
	def add_image(self,texture_id, a: Any, b: Any, uv_a: Any = (0,0), uv_b: Any = (1,1), col: int = 0xffffffff) -> Any: ...
	def add_polyline(self, points: Any, col: int, closed: bool = False, thickness: float = 1.0) -> Any: ...
	def channels_split(self, channels_count: int) -> Any: ...
	def channels_merge(self) -> Any: ...
	def from_ptr( ptr: Any) -> Any: ...
	def cmd_buffer_data(self) -> Any: ...
	def vtx_buffer_data(self) -> Any: ...
	def idx_buffer_data(self) -> Any: ...
	def channels_set_current(self, idx: int) -> Any: ...
	def commands(self) -> Any: ...

class _Font(object):
	def from_ptr( ptr: Any) -> Any: ...

class _FontAtlas(object):
	def _require_pointer(self) -> Any: ...
	def add_font_from_file_ttf(self, filename: str, size_pixels: float, glyph_ranges: Any = None,) -> Any: ...
	def clear_tex_data(self) -> Any: ...
	def clear_fonts(self) -> Any: ...
	def get_glyph_ranges_default(self) -> Any: ...
	def get_glyph_ranges_japanese(self) -> Any: ...
	def get_glyph_ranges_chinese(self) -> Any: ...
	def get_glyph_ranges_latin(self) -> Any: ...
	def get_tex_data_as_rgba32(self) -> Any: ...
	def texture_width(self) -> Any: ...
	def texture_id(self,value) -> Any: ...
	def from_ptr( ptr: Any) -> Any: ...
	def add_font_default(self) -> Any: ...
	def clear_input_data(self) -> Any: ...
	def clear(self) -> Any: ...
	def get_glyph_ranges_korean(self) -> Any: ...
	def get_glyph_ranges_chinese_full(self) -> Any: ...
	def get_glyph_ranges_cyrillic(self) -> Any: ...
	def get_tex_data_as_alpha8(self) -> Any: ...
	def texture_height(self) -> Any: ...

class _IO(object):
	display_size: Tuple[int, int]
	def config_flags(self) -> Any: ...
	def backend_flags(self) -> Any: ...
	def delta_time(self) -> Any: ...
	def ini_saving_rate(self) -> Any: ...
	def log_file_name(self) -> Any: ...
	def ini_file_name(self) -> Any: ...
	def mouse_double_click_time(self) -> Any: ...
	def mouse_double_click_max_distance(self) -> Any: ...
	def mouse_drag_threshold(self) -> Any: ...
	def key_map(self) -> Any: ...
	def key_repeat_delay(self, value: float) -> Any: ...
	def key_repeat_rate(self, value: float) -> Any: ...
	def font_global_scale(self) -> Any: ...
	def font_allow_user_scaling(self) -> Any: ...
	def display_fb_scale(self) -> Any: ...
	def display_visible_min(self) -> Any: ...
	def display_visible_max(self) -> Any: ...
	def config_mac_osx_behaviors(self) -> Any: ...
	def config_cursor_blink(self) -> Any: ...
	def config_resize_windows_from_edges(self) -> Any: ...
	def get_clipboard_text_fn(self) -> Any: ...
	def set_clipboard_text_fn(self) -> Any: ...
	def mouse_pos(self) -> Any: ...
	def mouse_down(self) -> Any: ...
	def mouse_wheel(self, value: float) -> Any: ...
	def mouse_wheel_horizontal(self, value: float) -> Any: ...
	def mouse_draw_cursor(self, value: bool) -> Any: ...
	def key_ctrl(self, value: bool) -> Any: ...
	def key_shift(self, value: bool) -> Any: ...
	def key_alt(self, value: bool) -> Any: ...
	def key_super(self, value: bool) -> Any: ...
	def add_input_character(self, c: Any) -> Any: ...
	def clear_input_characters(self) -> Any: ...
	def want_capture_keyboard(self) -> Any: ...
	def want_set_mouse_pos(self) -> Any: ...
	def nav_active(self) -> Any: ...
	def framerate(self) -> Any: ...
	def metrics_active_windows(self) -> Any: ...
	fonts: _FontAtlas
	def keys_down(self) -> Any: ...
	def add_input_characters_utf8(self, utf8_chars: str) -> Any: ...
	def want_capture_mouse(self) -> Any: ...
	def want_text_input(self) -> Any: ...
	def want_save_ini_setting(self) -> Any: ...
	def nav_visible(self) -> Any: ...
	def metrics_render_vertices(self) -> Any: ...
	def mouse_delta(self) -> Any: ...

class _ImGuiContext(object):
	def from_ptr( ptr: Any) -> Any: ...

class _StaticGlyphRanges(object):
	def from_ptr( ptr: Any) -> Any: ...